name: Build Native Executable

on:
  push:
    tags:
      - 'v*'

jobs:
  build:
    strategy:
      matrix:
        include:
          - os: macos-latest
            artifact: videodownloaderX-darwin-arm64
          - os: macos-13
            artifact: videodownloaderX-darwin-amd64
          - os: windows-latest
            artifact: videodownloaderX-windows-amd64.exe
          - os: ubuntu-latest
            artifact: videodownloaderX-linux-amd64
    runs-on: ${{ matrix.os }}
    timeout-minutes: 120
    steps:
      - uses: actions/checkout@v4
      
      - uses: graalvm/setup-graalvm@v1
        with:
          java-version: '21'
          distribution: 'graalvm'
          github-token: ${{ secrets.GITHUB_TOKEN }}
      
      - name: Build native executable
        run: ./mvnw clean package -Pnative -DskipTests -Dquarkus.native.container-build=false
        shell: bash
      
      - name: List target directory
        run: ls -lah target/
      
      - name: Rename binary (Unix)
        if: runner.os != 'Windows'
        run: |
          if [ -f "target/videodownloaderX-runner" ]; then
            mv target/videodownloaderX-runner ${{ matrix.artifact }}
            chmod +x ${{ matrix.artifact }}
            echo "✅ Binary ready: ${{ matrix.artifact }}"
          else
            echo "❌ ERROR: Binary not found!"
            find target -name "*videodownloaderX*" -o -name "app-*"
            exit 1
          fi
      
      - name: Rename binary (Windows)
        if: runner.os == 'Windows'
        run: |
          if (Test-Path "target\videodownloaderX-runner.exe") {
            Move-Item -Path "target\videodownloaderX-runner.exe" -Destination "${{ matrix.artifact }}"
            Write-Host "✅ Binary ready: ${{ matrix.artifact }}"
          } else {
            Write-Host "❌ ERROR: Binary not found!"
            Get-ChildItem -Path target -Recurse | Select-Object FullName
            exit 1
          }
        shell: powershell
      
      - uses: actions/upload-artifact@v4
        with:
          name: ${{ matrix.artifact }}
          path: ${{ matrix.artifact }}${{ runner.os == 'Windows' && '.exe' || '' }}

  release:
    needs: build
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      
      - uses: actions/download-artifact@v4
        with:
          path: artifacts
      
      - name: Prepare release artifacts
        run: |
          mkdir -p release
          find artifacts -type f -exec mv {} release/ \;
          cd release
          sha256sum * > SHA256SUMS
          cat SHA256SUMS
      
      - name: Create GitHub Release
        uses: softprops/action-gh-release@v1
        with:
          files: release/*
          draft: false
          prerelease: false
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
